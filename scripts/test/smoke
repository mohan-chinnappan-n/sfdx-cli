#!/usr/bin/env bash

source ./scripts/_init

set -ex

if [[ ! -d "$TMP_DIR/base" ]]; then
    ./scripts/build/base
fi

function sfdx () {
    node "$TMP_DIR/base/bin/$BIN_NAME.js" "$@"
}

# Enter tmp directory
cd "$(mktemp -d)"

# Disable the background autoupdater when smoke testing
export SFDX_AUTOUPDATE_DISABLE=true

# Run basic smoke tests
sfdx --dev-debug
sfdx version
sfdx help
sfdx plugins --core
sfdx force -h
sfdx force
sfdx force:alias:list

set +e

# Verify command set contains the minimum expected set
IFS='' read -r -d '' VERIFY_SCRIPT <<EOF
const fs = require('fs');
const expected = JSON.parse(fs.readFileSync('$RESOURCES_DIR/smoke/expected-commands.json'));
const stdin = process.stdin;
const chunks = [];
stdin.resume();
stdin.setEncoding('utf8');
stdin.on('data', (chunk) => chunks.push(chunk));
stdin.on('end', () => {
    const cmds = {};
    JSON.parse(chunks.join()).forEach((cmd) => cmds[cmd.id] = true);
    console.log('Verifying that expected commands exist...');
    expected.forEach((cmd) => {
        console.log('Checking ', cmd);
        if (!cmds[cmd]) throw new Error('Missing command: ' + cmd);
    });
});
EOF

sfdx commands --output=json | node -e "$VERIFY_SCRIPT"
