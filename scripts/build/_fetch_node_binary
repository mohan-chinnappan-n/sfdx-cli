#!/usr/bin/env bash

# inputs
# $1 OUTPUT_DIR
# $OS
# $ARCH
# $NODE_VERSION

source ./scripts/_init

set -x

if [[ $# -ne 1 ]]; then
    echo "USAGE: $0 OUTPUT_DIR"
    exit 1
fi

output=$1
node_ext=""
NODE_VERSION=$(node -p "require('./package.json')['cli-engine'].node || process.versions.node")
NODE_DIR="$TMP_DIR/node"
NODE_CACHE_DIR="$TMP_DIR/cache/node"

mkdir -p "$output"
mkdir -p "$NODE_DIR"
mkdir -p "$NODE_CACHE_DIR"

# install node
if [ "${OS}" == "windows" ]; then
    node_ext=".exe"
    node_base=node-v${NODE_VERSION}-win-${ARCH}
    if [ ! -f "$NODE_CACHE_DIR/${node_base}" ]; then
        echo "fetching ${node_base}"
        url=https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-win-${ARCH}.7z
        curl -fSsLo "$NODE_DIR/${node_base}.7z" "${url}"
        (
            cd "$NODE_DIR"
            7z x -bd -y "$NODE_DIR/${node_base}.7z" > /dev/null
            mv "${node_base}/node.exe" "$NODE_CACHE_DIR/${node_base}"
        )
    fi
else
    if [ "${ARCH}" == "arm" ]; then node_arch=armv7l; else node_arch="${ARCH}"; fi
    node_base=node-v${NODE_VERSION}-${OS}-${node_arch}
    if [ ! -f "$NODE_CACHE_DIR/${node_base}" ]; then
        echo "fetching ${node_base}"
        url=https://nodejs.org/dist/v${NODE_VERSION}/${node_base}.tar.xz
        curl -fSsL "${url}" | tar -C "${TMP_DIR}/node" -xJ
        mv "$NODE_DIR/${node_base}/bin/node" "$NODE_CACHE_DIR/${node_base}"
    fi
fi

cp "$NODE_CACHE_DIR/${node_base}" "${output}/node${node_ext}"
