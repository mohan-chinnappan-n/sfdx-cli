#!/usr/bin/env bash

# creates tarballs from the workspace into dist

source ./scripts/_init

set -ex

# create tarballs
cd "$RELEASE_DIR"

function build () {
    mkdir -p "$VERSIONED_BASE"
    mv "$WORKSPACE_DIR" "$VERSIONED_BASE/$BIN_NAME"

    tar c -C "$VERSIONED_BASE" "$BIN_NAME" | xz > "$TXZ_PATH" &
    local xzpid=$!
    tar czf "$TGZ_PATH" -C "$VERSIONED_BASE" "$BIN_NAME"
    wait $xzpid || exit 1
    TGZ_FILE="$VERSIONED_BASE.tar.gz"
    cp "$TGZ_PATH" "$TGZ_FILE"
    TXZ_FILE="$VERSIONED_BASE.tar.xz"
    cp "$TXZ_PATH" "$TXZ_FILE"

    mv "$VERSIONED_BASE/$BIN_NAME" "$WORKSPACE_DIR"

    SHA256_GZ=$(sha "$TGZ_PATH")
    SHZ256_XZ=$(sha "$TXZ_PATH")
    cat << EOF > "$RELEASE_DIR/${OS}-${ARCH}"
{
    "version": "${VERSION}",
    "channel": "${CHANNEL}",
    "sha256gz": "${SHA256_GZ}",
    "sha256xz": "${SHZ256_XZ}",
    "node": {
        "compatible": "${NODE_REQUIRED}",
        "recommended": "${NODE_VERSION}"
    }
}
EOF
    cp "$RELEASE_DIR/${OS}-${ARCH}" "$RELEASE_VERSION_DIR/${OS}-${ARCH}"
}

for ARCH in "${ARCHS[@]}"; do
    setarch "$ARCH"
    bg build
done
wait_all
