#!/usr/bin/env bash

source ./scripts/_init

set -x

# Check for potentially overflowing windows paths:
# * assume a max practical windows username length of 64 characters (https://technet.microsoft.com/it-it/library/bb726984(en-us).aspx)
# * add characters to account for the root sfdx client tmp untar path for a total of 135
#   - e.g. C:\Users\<username>\AppData\Local\sfdx\tmp\sfdx-cli-v6.xx.yy-abcdef-windows-x64\
# * subtract those 135 characters from the max windows path length of 259 to yield the allowable length of 124 path characters
# * considering that we currently have some dependencies in the built output that exceed 124 characters (up to 139 in salesforce-lightning-cli)
#   we will consider the maximum path length of 139, plus 1 (for a nice round number), as the hard upper limit to our allowable path length;
#   this leaves us a relatively comfortable maximum windows username length of 48 characters with a hard maximum path length of 140 characters
# * then scan the cleaned build output directory for paths exceding this threshold, and exit with an error if detected
function scan_path_lengths() {
    warnlen=124
    maxlen=140
    cd "$BASE_DIR"
    warntest=$(find node_modules | awk -v warnlen="$warnlen" '{ if (length($0) > warnlen) print "fail" }' | uniq)
    if [ "$warntest" == "fail" ]; then
        echo "WARN: Some paths could result in update errors for Windows users with usernames greater than 48 characters!"
        find node_modules | awk -v warnlen="$warnlen" '{ if (length($0) > warnlen) printf("%-3s  %s\n", length($0), $0) }'
    fi
    maxtest=$(find node_modules | awk -v maxlen="$maxlen" '{ if (length($0) > maxlen) print "fail" }' | uniq)
    if [ "$maxtest" == "fail" ]; then
        echo "ERROR: Unacceptably long paths detected in base build!"
        find node_modules | awk -v maxlen="$maxlen" '{ if (length($0) > maxlen) printf("%-3s  %s\n", length($0), $0) }'
        exit 1
    fi
    cd -
}

# This should be caught by the path lengths test above, but we've regressed enough on this that it's worth checking for explicitly
function ensure_no_webdriverio_test() {
    test_dir="$BASE_DIR/node_modules/webdriverio/test"
    if [ -e "$test_dir" ]; then
        echoerr "$test_dir is present! Was the test not aggressive enough?"
        exit 1
    fi
}

# We've accidentally over-cleaned the force:apex:test code in the past, so let's make sure we don't repeat that mistake
function ensure_apex_test() {
    src_dir="$BASE_DIR/node_modules/salesforce-alm/dist/lib/test"
    if [ ! -d "$src_dir" ]; then
        echoerr "$src_dir is missing! Was the test clean too aggressive?"
        exit 1
    fi
}

# We delete *.md files from node_modules, except in `templates` dirs -- double check their preservation
function ensure_templates_md() {
    template_readme="$BASE_DIR/node_modules/force-language-services/dist/project/templates/README.md"
    if [ ! -e "$template_readme" ]; then
        echoerr "$src_dir is missing! Was the *.md clean too aggressive?"
        exit 1
    fi
}

scan_path_lengths
ensure_no_webdriverio_test
ensure_apex_test
ensure_templates_md
