#!/usr/bin/env bash

OS=windows

source ./scripts/_init

set -e

if [[ ! -e "$RELEASE_DIR/sfdx-cli-v${VERSION}-windows-x64.tar.gz" || ! -e "$RELEASE_DIR/sfdx-cli-v${VERSION}-windows-x86.tar.gz" ]]; then
    script "build/common"
    script "build/workspace"
    script "build/tarballs"
fi

set +x

if [[ ! -z "${WINDOWS_SIGNING_KEY:-}" ]]; then
    echo "$WINDOWS_SIGNING_KEY" | base64 --decode > "/tmp/$BIN_NAME-windows-key"
fi

function build () {
    set -x

    # setup workspace
    INSTALLER_BASE="$TMP_DIR/windows-$ARCH-installer"
    rm -rf "$INSTALLER_BASE"
    mkdir -p "$INSTALLER_BASE/bin"

    sed "s/REM @OVERRIDES@/set SFDX_INSTALLER=true\\&set BIN_NAME=$BIN_NAME/" \
        "$ROOT_DIR/bin/run.cmd" > "$INSTALLER_BASE/bin/$BIN_NAME.cmd"
    cp "$RESOURCES_DIR/exe/$BIN_NAME" "$INSTALLER_BASE/bin/$BIN_NAME"

    tar xzf "$TGZ_PATH" -C "$TMP_DIR"
    mv "$TMP_DIR/$VERSIONED_BASE" "$INSTALLER_BASE/client"

    if [[ "$ARCH" == "x64" ]]; then
        PROGRAMSUFFIX="64"
    else
        PROGRAMSUFFIX=""
    fi

    WIN_VERSION=$(node -p "a='${SHORT_VERSION}'.split('-');a[0]+'.'+(a.length===2?a[1]:0)")
    sed -e "s/!define Version 'VERSION'/!define Version '${WIN_VERSION}'/" "resources/exe/$BIN_NAME.nsi" |\
        sed -e "s/InstallDir .*/InstallDir \"\$PROGRAMFILES$PROGRAMSUFFIX\\$BIN_NAME\"/" \
        > "$INSTALLER_BASE/$BIN_NAME.nsi"

    makensis "$INSTALLER_BASE/$BIN_NAME.nsi" \
        | grep -v "\\[compress\\]" \
        | grep -v "^File: Descending to"

    if [[ ! -z "${WINDOWS_SIGNING_KEY:-}" && ! -z "${WINDOWS_SIGNING_PASS:-}" ]]; then
        set +x
        osslsigncode -pkcs12 "/tmp/$BIN_NAME-windows-key" \
            -pass "$WINDOWS_SIGNING_PASS" \
            -n 'Salesforce CLI' \
            -i https://developer.salesforce.com/platform/dx/ \
            -in "$INSTALLER_BASE/installer.exe" \
            -out "$RELEASE_DIR/$PKG_NAME-$ARCH.exe"
    else
        cp "$INSTALLER_BASE/installer.exe" "$RELEASE_DIR/$PKG_NAME-$ARCH.exe"
    fi
}

for ARCH in "${ARCHS[@]}"; do
    setarch "$ARCH"
    bg build
done
wait_all
