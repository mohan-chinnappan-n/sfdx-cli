#!/usr/bin/env bash

# inputs
# $1 OUTPUT_DIR
# $OS
# $ARCH
# $NODE_VERSION

source ./scripts/_init

set -ex

if [[ $# -ne 1 ]]; then
    stdout "USAGE: $0 OUTPUT_DIR"
    exit 1
fi

output="$1"
node_ext=""
NODE_DIR="$TMP_DIR/node"
NODE_CACHE_DIR="$TMP_DIR/cache/node"

mkdir -p "$output"
mkdir -p "$NODE_DIR"
mkdir -p "$NODE_CACHE_DIR"

if [[ -x "$(command -v 7z)" ]]; then
    zip_cli="7z"
    zip_ext="7z"
elif [[ -x "$(command -v 7za)" ]]; then
    zip_cli="7za"
    zip_ext="7z"
else
    zip_cli="unzip"
    zip_ext="zip"
fi

# Install node
if [[ "${OS}" == "windows" ]]; then
    node_ext=".exe"
    node_base="node-v${NODE_VERSION}-win-${ARCH}"
    if [[ ! -f "$NODE_CACHE_DIR/${node_base}" ]]; then
        stdout "fetching ${node_base}"
        url="https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-win-${ARCH}.${zip_ext}"
        curl -fSsLo "$NODE_DIR/${node_base}.${zip_ext}" "${url}"
        (
            cd "$NODE_DIR"
            if [[ "$zip_cli" == "unzip" ]]; then
                $zip_cli "$NODE_DIR/${node_base}.zip" > /dev/null
            else
                $zip_cli x -bd -y "$NODE_DIR/${node_base}.7z" > /dev/null
            fi
            mv "${node_base}/node.exe" "$NODE_CACHE_DIR/${node_base}"
        )
    fi
else
    if [[ "${ARCH}" == "arm" ]]; then node_arch=armv7l; else node_arch="${ARCH}"; fi
    node_base="node-v${NODE_VERSION}-${OS}-${node_arch}"
    if [[ ! -f "$NODE_CACHE_DIR/${node_base}" ]]; then
        stdout "fetching ${node_base}"
        url="https://nodejs.org/dist/v${NODE_VERSION}/${node_base}.tar.xz"
        curl -fSsL "${url}" | tar -C "${TMP_DIR}/node" -xJ
        mv "$NODE_DIR/${node_base}/bin/node" "$NODE_CACHE_DIR/${node_base}"
    fi
fi

cp "$NODE_CACHE_DIR/${node_base}" "${output}/node${node_ext}"
