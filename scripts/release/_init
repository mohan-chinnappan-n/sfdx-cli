#!/usr/bin/env bash

# shellcheck disable=SC2034

source ./scripts/_init

function s3upload () {
    maxage="$1"; shift
    local="$1";  shift
    remote="$1"; shift

    # Only allow uploads from the build tmp dir
    if [[ "$local" != "$TMP_DIR"* ]]; then
        stderr "Unexpected upload request from local dir: '$local'"
        exit 1
    fi

    # Only allow uploads to the target s3 bucket
    if [[ "$remote" != "$S3_BASE_UPLOAD_URL"* ]]; then
        stderr "Unexpected upload request to s3 url: '$remote'"
        exit 1
    fi

    extra_args=()
    if [[ ! -z "${S3_ENDPOINT:-}" ]]; then
        extra_args+=("--endpoint-url" "$S3_ENDPOINT")
    fi

    if [[ ! -z "${S3_PROFILE:-}" ]]; then
        extra_args+=("$S3_PROFILE")
    fi

    if [[ "${DEBUG_S3_UPLOAD:-}" == "true" ]]; then
        echo "[SKIP] S3 upload from '$local' to '$remote'..."
        find "$local"
        return 0
    fi

    aws s3 cp "${extra_args[@]+"${extra_args[@]}"}" --cache-control max-age="$maxage" "$local" "$remote" "$@"
}

function awsConfigureSetFromEnvVar() {
    if [ $# -ne 3 ]; then
        echo "assertion expected 3 arguments but received $#"
        exit 1
    fi

    if [ -z ${1} ] || [[ $(len "${!1}") -eq 0 ]]; then
        echo "Missing Env Variable for $1"
        exit 1
    fi

    aws configure set $2 ${!1} --profile $3
}

if [ -z ${S3_ENDPOINT} ] || [ ${#S3_ENDPOINT} -eq 0 ]; then
    echo "S3_ENDPOINT is not specified. Specify an s3 host url or \"AWS\"".
    exit 1
fi

if [ ${S3_ENDPOINT} !=  "AWS" ]; then
    S3_ENDPOINT="--endpoint-url ${S3_ENDPOINT}"
    S3_PROFILE_NAME="sfdx"
    S3_PROFILE="--profile sfdx"
    awsConfigureSetFromEnvVar "S3_REGION" "region" $S3_PROFILE_NAME
    awsConfigureSetFromEnvVar "S3_ACCESS_KEY" "aws_access_key_id" $S3_PROFILE_NAME
    awsConfigureSetFromEnvVar "S3_SECRET" "aws_secret_access_key" $S3_PROFILE_NAME
    aws configure list $S3_PROFILE
else
    S3_ENDPOINT=""
    S3_PROFILE=""
fi
