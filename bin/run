#!/usr/bin/env bash
set -e

# If autoupdate is not set, default to false. NOTE -- only use
# this logic in the dev mode version of this script, not the one
# we build into the release binary!
if [ -z ${SFDX_AUTOUPDATE_DISABLE+x} ]; then
    export SFDX_AUTOUPDATE_DISABLE=true
fi

NODE_FLAGS=()
CLI_ARGS=()

while [[ $# -gt 0 ]]; do
key="$1"

case $key in
    --dev-suspend)
        NODE_FLAGS+=("--inspect-brk")
        shift
    ;;
    --dev-profile)
        NODE_FLAGS+=("--prof")
        shift
    ;;
    --dev-debug)
        export SFDX_DEBUG=1
        export DEBUG=\*
        shift
    ;;
    --dev-config)
        export CLI_ENGINE_SHOW_CONFIG=1
        shift
    ;;
    *)
        CLI_ARGS+=("$key")
        shift
    ;;
esac
done

get_script_dir () {
    SOURCE="${BASH_SOURCE[0]}"
    # While $SOURCE is a symlink, resolve it
    while [ -h "$SOURCE" ]; do
        DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
        SOURCE="$( readlink "$SOURCE" )"
        # If $SOURCE was a relative symlink (so no "/" as prefix, need to resolve it relative to the symlink base directory
        [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
    done
    DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
    echo "$DIR"
}
DIR=$(get_script_dir)

CLI_BINPATH=$DIR/run node "${NODE_FLAGS[@]}" $DIR/run.js "${CLI_ARGS[@]}"
